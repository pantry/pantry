---
# Configure where to send Pantry log files.
# Can be one of three values:
#
# - stdout / nil -- Send to STDOUT
# - syslog       -- Send to the local syslog daemon. Program name is "pantry"
# - [file path]  -- Write logs to the given file
log_to: /var/log/pantry-client.log

# Minimum log output.
# Levels are defined as:
#
# - fatal
# - error
# - warn
# - info
# - debug
#
# Each level includes all levels above it.
# log_level: info

# Specify the Syslog program name
# In the case that log_to is set to 'syslog' you can set the program name
# for filtering messages.
# syslog_program_name: pantry

# Location on the file system where all persistent files are stored.
# Must be read and writable by the user running pantry-client
# data_dir: /var/lib/pantry

networking:
  # IP address or Domain hosting the Pantry Server we connect to
  # server_host: 127.0.0.1

  # Port over which Server publishes messages
  # pub_sub_port: 23001

  # Port over which the Client sends messages to the Server
  # receive_port: 23002

  # Port over which File data is passed between Client and Server
  # file_service_port: 23003

  # Security strategy to use in communication
  #
  # Defaults to nil, meaning no built-in security.
  # Also available is "curve" which turns on ZeroMQ's Curve encryption
  # as seen here: http://api.zeromq.org/4-0:zmq-curve
  # This is not the default because Curve has not yet been fully vetted by
  # the crypto community.
  #
  # If the Server is configured for curve the so must the Client and the Client
  # must be given the Server's public encryption key.
  # security:

client:
  # Set the unique identity of this Client. The default is the current
  # hostname of the server. This name should be unique across the entire
  # set of Clients talking to a given Server
  # identity: "pantry-test-1"

  # [Optional] A Client can be configured to manage a specific application.
  # Use this if the Pantry network manages multiple applications.
  # application: "pantry"

  # [Optional] A Client can be configured to manage a certain environment of
  # an application.
  # environment: "test"

  # [Optional] A Client can be configured as managing a certain set of roles
  # for the given application. This must be an array
  # roles:
  #   - database
  #   - application

  # How often, in seconds, does this client ping the Server
  # to ensure the Server knows about this Client?
  # heartbeat_interval: 300
